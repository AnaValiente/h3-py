import h3core
import pytest

assert h3core.geo_to_h3(37.7752702151959, -122.418307270836, 9) == '8928308280fffff'
assert h3core.h3_to_geo('8928308280fffff') == pytest.approx((37.77670234943567, -122.41845932318311))


def approx2(a,b):
    if len(a) != len(b):
        return False

    return all(
    x == pytest.approx(y)
    for x,y in zip(a,b)
    )

expected = (
    (37.775197782893386, -122.41719971841658),
    (37.77688044840226, -122.41612835779264),
    (37.778385004930925, -122.4173879761762),
    (37.77820687262238, -122.41971895414807),
    (37.77652420699321, -122.42079024541877),
    (37.775019673792606, -122.4195306280734)
 )

out = h3core.h3_to_geo_boundary('8928308280fffff')
assert approx2(out, expected)


expected = (
    (-122.41719971841658, 37.775197782893386),
    (-122.41612835779264, 37.77688044840226),
    (-122.4173879761762, 37.778385004930925),
    (-122.41971895414807, 37.77820687262238),
    (-122.42079024541877, 37.77652420699321),
    (-122.4195306280734, 37.775019673792606),
    (-122.41719971841658, 37.775197782893386)
)

out = h3core.h3_to_geo_boundary('8928308280fffff', geo_json=True)
assert approx2(out, expected)

